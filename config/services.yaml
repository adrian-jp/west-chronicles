# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    upload_directory: '%kernel.project_dir%/public'
    upload_directory_tracks_audio: '%upload_directory%/album/one/detail/tracks'
    upload_directory_article_photo: '%upload_directory%/img/photos/article'
    upload_directory_event_photo: '%upload_directory%/img/photos/event'
    upload_directory_artiste_photo: '%upload_directory%/img/photos/artiste'
    upload_directory_album_photo: '%upload_directory%/img/photos/album'
    upload_directory_clips_video: '%upload_directory%/clip'
    router.request_context.base_url: 'localhost/west-chronicles/public'
    locale: 'fr'
    version: '1.0.0'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\FileUploader:
        arguments:
            $targetDirectory: '%upload_directory%'

    App\Service\Mp3File:
            arguments:
                $filename: '%fos_js_routing.request_context_base_url%'

    get_set_method_normalizer:
            class: Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer
            tags: [serializer.normalizer]

    App\Form\Extension\TrackAlbumFormTypeExtension:
        tags:
            - { name: form.type_extension,
                extended_type: Symfony\Component\Form\Extension\Core\Type\FileType }

